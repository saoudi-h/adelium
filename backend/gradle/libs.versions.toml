[versions]
spring-boot = "3.1.4"
spring-cloud-eureka = "4.0.3"
spring-cloud-gateway = "4.0.7"
spring-cloud-config = "4.0.4"
spring-security = "6.1.4"
java-format = "1.18.1"
mysql = "8.1.0"
jjwt = "0.12.2"
lombok = "1.18.30"

[libraries]
spring-boot-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-security-test = {module = "org.springframework.security:spring-security-test", version.ref = "spring-security"}
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
spring-boot-actuator= { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-security= { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-jpa= { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-boot-devtools = {module = "org.springframework.boot:spring-boot-devtools", version.ref="spring-boot"}
mysql-connector= { module = "com.mysql:mysql-connector-j", version.ref = "mysql" }
jjwt-api = {module="io.jsonwebtoken:jjwt-api", version.ref = "jjwt"}
jjwt-impl = {module="io.jsonwebtoken:jjwt-impl", version.ref = "jjwt"}
jjwt-jackson = {module="io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt"}
lombok = {module="org.projectlombok:lombok", version.ref="lombok"}
spring-cloud-eureka-server = {module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server", version.ref = "spring-cloud-eureka"}
spring-cloud-eureka-client = {module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client", version.ref = "spring-cloud-eureka"}
spring-cloud-gateway = { module  = "org.springframework.cloud:spring-cloud-starter-gateway", version.ref = "spring-cloud-gateway"}
google-java-format =  {module = "com.google.googlejavaformat:google-java-format", version.ref = "java-format" }
spring-boot-gradle-plugin = {module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref="spring-boot"}
spring-cloud-config-server ={module  ="org.springframework.cloud:spring-cloud-config-server", version.ref="spring-cloud-config"}
spring-cloud-config-client ={module  ="org.springframework.cloud:spring-cloud-config-client", version.ref="spring-cloud-config"}

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
